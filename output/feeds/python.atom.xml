<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>FNScoder - Python</title><link href="http://fnscoder.com/" rel="alternate"></link><link href="http://fnscoder.com/feeds/python.atom.xml" rel="self"></link><id>http://fnscoder.com/</id><updated>2017-08-27T16:30:00-03:00</updated><entry><title>Criando um blog com Python, Pelican, Github Pages e domínio personalizado</title><link href="http://fnscoder.com/criando-um-blog-com-python-pelican-github-pages-e-dominio-personalizado.html" rel="alternate"></link><published>2017-08-27T16:30:00-03:00</published><updated>2017-08-27T16:30:00-03:00</updated><author><name>Felipe N Souza</name></author><id>tag:fnscoder.com,2017-08-27:/criando-um-blog-com-python-pelican-github-pages-e-dominio-personalizado.html</id><summary type="html">&lt;p&gt;Como criar um blog utilizando Python + Pelican e hospedar no Github Pages utilizando domínio personalizado.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fala galera!&lt;/p&gt;
&lt;p&gt;Nesse post vamos mostrar como preparar o ambiente e criar um blog utilizando Python e Pelican. Depois utilizaremos o Github Pages para hospedar gratuitamente e configurar um domínio personalizado.&lt;/p&gt;

&lt;h3&gt;Preparando o ambiente&lt;/h3&gt;
&lt;p&gt;Para preparar o ambiente recomendo fortemente a utilização do virtualenv e virtualenv-wrapper. O virtualenv cria ambientes virtuais que isolam os pacotes python instalados do restante do seu S.O. e o virtualenv-wrapper facilita a utilização do virtualenv. Se tiver problemas para isso recomendo fortemente o post sobre organização de ambiente Python do Henrique Bastos (Link no fim do post)&lt;/p&gt;

&lt;p&gt;Com o virtualenv e virtualenv-wrapper instalados e configurados utilizaremos o comando abaixo para criar o ambiente virtual e o diretório no qual vamos trabalhar. Para utilizarmos o guthub pages é importante que o nome do projeto seja seu nome de usuário do github .github.io&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkproject username-do-github.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Após isso você terá o ambiente virtual criado em seu diretório de ambientes virtuais, a pasta do projeto criada dentro do seu diretório de projetos, já estará com o venv ativo e dentro da pasta do projeto. (Massa neh!) Quando precisar ativar o ambiente basta rodar:&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ workon username-do-github.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;E para desativá-lo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para listar todos os seus ambientes virtuais basta rodar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ workon
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Primeiros passos com Pelican&lt;/h3&gt;
&lt;p&gt;Com o venv ativo vamos instalar o Pelican e o markdown com o pip&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pip install pelican markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para gerar o projeto pelo pelican basta rodar&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pelican-quickstart

Welcome to pelican-quickstart v3.7.1.
This script will &lt;span class="nb"&gt;help&lt;/span&gt; you create a new Pelican-based website.
Please answer the following questions so this script can generate the files
needed by Pelican.

Using project associated with current virtual environment.Will save to:
/caminho/para/seus/projetos/username-do-github.github.io

&lt;span class="c1"&gt;#as opções em letras maísculas são os padrões&lt;/span&gt;

&amp;gt; What will be the title of this web site? &lt;span class="c1"&gt;# O título do seu site&lt;/span&gt;
&amp;gt; Who will be the author of this web site? &lt;span class="c1"&gt;# O nome do autor (provavelmente o seu)&lt;/span&gt;
&amp;gt; What will be the default language of this web site? &lt;span class="o"&gt;[&lt;/span&gt;pt&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;#Idioma&lt;/span&gt;
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Deseja especificar a URL &lt;/span&gt;
&amp;gt; What is your URL prefix? &lt;span class="o"&gt;(&lt;/span&gt;see above example&lt;span class="p"&gt;;&lt;/span&gt; no trailing slash&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;#sua url personalizada&lt;/span&gt;
&amp;gt; Do you want to &lt;span class="nb"&gt;enable&lt;/span&gt; article pagination? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; y   &lt;span class="c1"&gt;#Paginação nos posts                     &lt;/span&gt;
&amp;gt; How many articles per page &lt;span class="k"&gt;do&lt;/span&gt; you want? &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;        &lt;span class="c1"&gt;#Quantos posts por página                          &lt;/span&gt;
&amp;gt; What is your &lt;span class="nb"&gt;time&lt;/span&gt; zone? &lt;span class="o"&gt;[&lt;/span&gt;Europe/Paris&lt;span class="o"&gt;]&lt;/span&gt; America/Sao_Paulo     &lt;span class="c1"&gt;#Fuso horário                              &lt;/span&gt;
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; y &lt;span class="c1"&gt;#Altamente recomendado, pois faclita a geração do site estático&lt;/span&gt;
&amp;gt; Do you want an auto-reload &lt;span class="p"&gt;&amp;amp;&lt;/span&gt; simpleHTTP script to assist with theme and site development? &lt;span class="o"&gt;(&lt;/span&gt;Y/n&lt;span class="o"&gt;)&lt;/span&gt; y &lt;span class="c1"&gt;# Recarregamento automático do server em desenvolvimento&lt;/span&gt;
&amp;gt; Do you want to upload your website using FTP? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                      
&amp;gt; Do you want to upload your website using SSH? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                      
&amp;gt; Do you want to upload your website using Dropbox? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n
&amp;gt; Do you want to upload your website using S3? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n                                                       
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; n
&amp;gt; Do you want to upload your website using GitHub Pages? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y   &lt;span class="c1"&gt;#Github&lt;/span&gt;
&amp;gt; Is this your personal page &lt;span class="o"&gt;(&lt;/span&gt;username.github.io&lt;span class="o"&gt;)&lt;/span&gt;? &lt;span class="o"&gt;(&lt;/span&gt;y/N&lt;span class="o"&gt;)&lt;/span&gt; y                                                                                              
Done. Your new project is available at /caminho/para/seus/projetos/username-do-github.github.io
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Versionando o blog com git e hospedando no Github Pages&lt;/h3&gt;
&lt;p&gt;Após isso a estrutura do projeto estará pronta e é hora de começar a trabalhar com git. Para isso criaremos no github um repositório com o mesmo nome do projeto, ou seja, username-do-github.github.io. No diretório local precisamos iniciar o versionamento com git e adicionar o repositório do github como repositório remoto.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git init
$ git remote add origin git@github.com:username-do-github/username-do-github.github.io.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Organizaremos o projeto em duas branchs:&lt;br&gt;
- master&lt;br&gt;
- pelican&lt;br&gt;
Na branch pelican ficarão os arquivos e códigos que irão gerar o site estático e na branch master apenas os arquivos estáticos gerados. Para isso crie um nova branch chamada pelican, adicione as alterações, faça o primeiro commit e suba para o repositório remoto&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git checkout -b pelican
$ git add .
$ git commit -m &lt;span class="s1"&gt;&amp;#39;iniciando branch pelican&amp;#39;&lt;/span&gt;
$ git push origin pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para publicar o conteúdo estático na branch master utilizaremos o ghp-import, para instalá-lo basta utilizar o pip&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install ghp-import
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Para gerar os estáticos e enviar direto para o github basta utilizar o make&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;make github
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configurando o domínio personalizado&lt;/h3&gt;
&lt;p&gt;Para adicionar o domínio personalizado o primeiro passo é adicionar o endereço de sua URL nos settings do repositório no github. Em seguida precisamos criar um arquivo chamado CNAME contendo o domínio na raiz do projeto. Para isso você deve adicionar o seguinte trecho ao seu pelicanconf.py&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extras/CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;extras/CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;CNAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Isso fará com que o CNAME seja criado no momento da geração dos arquivos estáticos.&lt;/p&gt;

&lt;h3&gt;Criando e publicando novos posts&lt;/h3&gt;
&lt;p&gt;Para criar novos posts você deverá criar um novo arquivo markdown na pasta content com o conteúdo do post seguindo a seguinte estrutura&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Title: Meu primeiro post
Date: &lt;span class="m"&gt;2017&lt;/span&gt;-08-27 &lt;span class="m"&gt;15&lt;/span&gt;:30
Modified: &lt;span class="m"&gt;2017&lt;/span&gt;-08-27 &lt;span class="m"&gt;19&lt;/span&gt;:30
Category: Python
Tags: pelican, publishing
Slug: meu-super-post
Authors: Seu Nome
Summary: Descrição resumida &lt;span class="k"&gt;do&lt;/span&gt; post

Conteúdo &lt;span class="k"&gt;do&lt;/span&gt; post!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;
 Em seguida add os arquivos alterados ao git, faça commit e suba as alterações para o repositório remoto primeiro para a branch pelican e depois utilizando o make para a branch master.&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git add . 
$ git commit -m &lt;span class="s1"&gt;&amp;#39;first post&amp;#39;&lt;/span&gt; 
$ git push origin pelican 
$ make github
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pronto! Seu site foi gerado com Python utilizando o Pelican, está hospedado gratuitamente no Github Pages e utilizando um domínio personalizado. Você ainda pode personalizar seu site utilizando os temas e plugins disponíveis [no repositório do pelican no github](https://github.com/getpelican)&lt;/p&gt;

&lt;p&gt;Dúvidas, comentários ou sugestões são muito bem vindas!&lt;br&gt;&lt;br&gt;
Até&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fonte:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://medium.com/welcome-to-the-django/guia-definitivo-para-organizar-meu-ambiente-python-a16e2479b753"&gt;Guia para organização de ambiente Python - Henrique Bastos&lt;/a&gt;&lt;br&gt;
&lt;a href="http://docs.getpelican.com/en/stable/"&gt;Documentação Pelican&lt;/a&gt;&lt;br&gt;
&lt;a href="http://pythonclub.com.br/criando-sites-estaticos-com-pelican.html"&gt;Criando sites estáticos com Pelican Framework&lt;/a&gt;&lt;br&gt;
&lt;a href="http://pythonclub.com.br/github-pages-com-pelican-e-travis-ci.html"&gt;Github Pages com Pelican e Travis-CI&lt;/a&gt;&lt;br&gt;
&lt;a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages/"&gt;Using a custom domain with github pages&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category><category term="pelican"></category><category term="github"></category><category term="hospedagem"></category><category term="domínio"></category><category term="tutorial"></category></entry><entry><title>Primeiro Post</title><link href="http://fnscoder.com/my-first-post.html" rel="alternate"></link><published>2017-08-27T02:35:00-03:00</published><updated>2017-08-27T16:10:00-03:00</updated><author><name>Felipe N Souza</name></author><id>tag:fnscoder.com,2017-08-27:/my-first-post.html</id><summary type="html">&lt;p&gt;Primeiro post com python + pelican&lt;/p&gt;</summary><content type="html">&lt;p&gt;Fala galera!&lt;/p&gt;
&lt;p&gt;Primeiro post no ar com Pelican \o/.
O Pelican é um gerador de sites estáticos escrito em Python. É simples, leve e muito customizável. 
O formato padrão dos posts é rst, mas podemos utilizar markdown tranquilamente.
Em breve teremos um post com os detalhes da instalação e configuração.&lt;/p&gt;
&lt;p&gt;Até&lt;/p&gt;</content><category term="python"></category><category term="pelican"></category><category term="blog"></category></entry></feed>